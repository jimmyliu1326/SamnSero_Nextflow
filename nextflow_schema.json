{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/SamnSero/master/nextflow_schema.json",
  "title": "SamnSero pipeline parameters",
  "description": "Bacterial Genomics Workflow for Infectious Disease Diagnostics and Surveillance",
  "type": "object",
  "definitions": {
      "input_output_options": {
          "title": "Input/output options",
          "type": "object",
          "fa_icon": "fas fa-terminal",
          "description": "Define where the pipeline should find input data and save output data.",
          "properties": {
              "input": {
                  "type": "string",
                  "format": "file-path",
                  "mimetype": "text/csv",
                  "pattern": "^\\S+\\.csv$",
                  "schema": "assets/schema_input.json",
                  "description": "Path to comma-separated file containing information about the samples in the experiment.",
                  "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re//usage#samplesheet-input).",
                  "fa_icon": "fas fa-file-csv"
              },
              "out_dir": {
                  "type": "string",
                  "description": "Path to the output directory where the results will be saved.",
                  "default": "./results",
                  "fa_icon": "fas fa-folder-open",
                  "format": "directory-path"
              },
              "watchdir": {
                  "type": "string",
                  "fa_icon": "fas fa-eye",
                  "format": "directory-path",
                  "description": "Path to the watch directory for executing the pipeline in real-time"
              }
          }
      },
      "sequencing_info": {
          "title": "Sequencing Info",
          "type": "object",
          "description": "",
          "default": "",
          "properties": {
              "seq_platform": {
                  "type": "string",
                  "default": "nanopore",
                  "description": "Sequencing platform that generated the input data. Options: nanopore/illumina",
                  "enum": [
                      "nanopore",
                      "illumina"
                  ]
              },
              "taxon_name": {
                  "type": "string",
                  "default": "Salmonella enterica",
                  "description": "Name of the target organism sequenced. Quote the string if the name contains space characters."
              },
              "taxon_level": {
                  "type": "string",
                  "default": "species",
                  "description": "Taxon rank of the target organism sequenced.",
                  "enum": [
                      "species",
                      "kingdom",
                      "phylum",
                      "class",
                      "order",
                      "family",
                      "genus",
                      "domain"
                  ]
              },
              "gsize": {
                  "type": "string",
                  "description": "Expected genome size of the target organism. Leave empty for metagenomic data or unknown genome size. The expected genome size is used for downsampling the raw reads to a set coverage (determined by --asm_cov) prior to genome assembly. Use units g/m/k to specify genome size, e.g. 3g, 4.5m, 20k"
              },
              "nanohq": {
                  "type": "boolean",
                  "description": "Optimize analysis for high quality Q20+ Nanopore reads"
              }
          },
          "fa_icon": "fas fa-info-circle"
      },
      "data_quality_check": {
          "title": "Data quality check",
          "type": "object",
          "description": "",
          "default": "",
          "properties": {
              "qc": {
                  "type": "boolean",
                  "description": "Perform quality check on genome assemblies"
              },
              "trim": {
                  "type": "boolean",
                  "description": "Perform barcode and adapter trimming"
              },
              "centrifuge": {
                  "type": "string",
                  "default": "/mnt/e/data/reference/centrifuge/",
                  "description": "Path to DIRECTORY containing Centrifuge database index (required if using --qc)",
                  "format": "directory-path"
              },
              "min_rq": {
                  "type": "integer",
                  "default": 10,
                  "description": "Minimum raw read quality score"
              },
              "min_rl": {
                  "type": "integer",
                  "default": 1000,
                  "description": "Minimum raw read length"
              },
              "min_tr": {
                  "type": "integer",
                  "default": 3000,
                  "description": "Minimum number of total reads required to attempt genome assembly"
              },
              "asm_cov": {
                  "type": "integer",
                  "default": 150,
                  "description": "Maximum contig depth of coverage"
              },
              "nopolish": {
                  "type": "string",
                  "default": "None",
                  "description": "Disable post-assembly polishing by medaka"
              }
          },
          "fa_icon": "far fa-check-circle"
      },
      "genome_annotation": {
          "title": "Genome annotation",
          "type": "object",
          "default": "",
          "properties": {
              "annot": {
                  "type": "boolean",
                  "description": "Annotate genome assemblies"
              }
          },
          "fa_icon": "fas fa-search"
      },
      "metagenomics_options": {
          "title": "Metagenomics options",
          "type": "object",
          "description": "",
          "default": "",
          "properties": {
              "meta": {
                  "type": "string",
                  "description": "Optimize assembly parameters for metagenomic samples [Options: on/off]",
                  "default": "off",
                  "enum": [
                      "off",
                      "on"
                  ]
              },
              "min_binsize": {
                  "type": "integer",
                  "default": 2000000,
                  "description": "Minimum bin size to output and analyze",
                  "hidden": true
              },
              "disable_binning": {
                  "type": "boolean",
                  "description": "Disable metagenomic binning on metagenome assembly",
                  "hidden": true
              },
              "mmseqs_db": {
                  "type": "string",
                  "default": "/mnt/e/data/reference/mmseqs2_bacteria",
                  "description": "MMSeqs2 taxonomic database DIRECTORY path",
                  "format": "file-path",
                  "hidden": true
              },
              "lca_rank": {
                  "type": "string",
                  "default": "genus",
                  "description": "Restrict sequence analysis to contigs assigned at this lowest LCA rank (only applies when using --meta targeted and --disable_binning)",
                  "enum": [
                      "species",
                      "kingdom",
                      "phylum",
                      "class",
                      "order",
                      "family",
                      "genus",
                      "domain"
                  ],
                  "hidden": true
              }
          }
      },
      "gpu_acceleration": {
          "title": "GPU acceleration",
          "type": "object",
          "description": "",
          "default": "",
          "properties": {
              "gpu": {
                  "type": "boolean",
                  "description": "Accelerate specific processes that utilize GPU computing. Must have NVIDIA Container Toolkit installed to enable GPU computing"
              },
              "medaka_batchsize": {
                  "type": "integer",
                  "default": 100,
                  "description": "Medaka batch size (smaller value reduces memory use)"
              }
          },
          "fa_icon": "fas fa-tachometer-alt"
      },
      "real_time_options": {
          "title": "Real-time options",
          "type": "object",
          "description": "Tuning real-time analysis settings",
          "default": "",
          "properties": {
              "watch_cpus": {
                  "type": "integer",
                  "default": 32,
                  "description": "Maximum CPUs allocated for real-time sequence analysis"
              },
              "watch_mode": {
                  "type": "string",
                  "default": "create,modify",
                  "description": "Types of file event to trigger real-time analysis (create/modify/delete). Multiple values delimited by a comma can be specified to enable the detection of multiple event types."
              }
          }
      },
      "slurm_hpc": {
          "title": "Slurm HPC",
          "type": "object",
          "description": "",
          "default": "",
          "properties": {
              "account": {
                  "type": "string",
                  "description": "Slurm group account"
              }
          },
          "fa_icon": "fas fa-server",
          "help_text": ""
      },
      "generic_options": {
          "title": "Generic options",
          "type": "object",
          "fa_icon": "fas fa-file-import",
          "description": "Less common options for the pipeline, typically set in a config file.",
          "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
          "properties": {
              "help": {
                  "type": "boolean",
                  "description": "Display help text.",
                  "fa_icon": "fas fa-question-circle",
                  "hidden": true
              },
              "version": {
                  "type": "boolean",
                  "description": "Print pipeline version"
              },
              "noreport": {
                  "type": "boolean",
                  "description": "Do not generate interactive reports"
              }
          }
      }
  },
  "allOf": [
      {
          "$ref": "#/definitions/input_output_options"
      },
      {
          "$ref": "#/definitions/sequencing_info"
      },
      {
          "$ref": "#/definitions/data_quality_check"
      },
      {
          "$ref": "#/definitions/genome_annotation"
      },
      {
          "$ref": "#/definitions/metagenomics_options"
      },
      {
          "$ref": "#/definitions/gpu_acceleration"
      },
      {
          "$ref": "#/definitions/real_time_options"
      },
      {
          "$ref": "#/definitions/slurm_hpc"
      },
      {
          "$ref": "#/definitions/generic_options"
      }
  ]
}