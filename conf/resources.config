process {
  withName: 'nanopore:porechop' {
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
    maxRetries = 3
  }
  withName: 'nanopore:ASSEMBLY_nanopore:dragonflye' {
    cpus = check_max( 6, 'cpus' )
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'ignore' }
    maxRetries = 3
  }
  withName: 'nanopore:ASSEMBLY_nanopore:flye' {
    cpus = check_max( 6, 'cpus' )
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'ignore' }
    maxRetries = 3
  }
  withName: 'nanopore:ASSEMBLY_nanopore:metaflye' {
    cpus = check_max( 6, 'cpus' )
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'ignore' }
    maxRetries = 3
  }
  withName: 'nanopore:ASSEMBLY_nanopore:medaka' {
    cpus = check_max( 2, 'cpus' )
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
    maxRetries = 3
  }
  withName: 'nanopore:ASSEMBLY_nanopore:medaka_gpu' {
    cpus = check_max( 2, 'cpus' )
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
    maxRetries = 3
  }
  withName: 'post_asm_process:ANNOT:aggregate_cctyper' {
    cpus = check_max( 2, 'cpus' )
  }
  withName: 'post_asm_process:ANNOT:aggregate_mob_suite' {
    cpus = check_max( 1, 'cpus' )
  }
  withName: 'post_asm_process:ANNOT:aggregate_rgi' {
    cpus = check_max( 2, 'cpus' )
  }
  withName: 'post_asm_process:ANNOT:cctyper' {
    cpus = check_max( 3, 'cpus' )
    memory = check_max( 1.GB, 'memory' )
  }
  withName: 'post_asm_process:ANNOT:mob_suite' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 2.GB, 'memory' )
  }
  withName: 'post_asm_process:ANNOT:mob_suite_merge' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 1.GB, 'memory' )
  }
  withName: 'post_asm_process:ANNOT:mob_suite_summary' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 1.GB, 'memory' )
  }
  withName: 'post_asm_process:ANNOT:rgi' {
    cpus = check_max( 3, 'cpus' )
    memory = check_max( 2.GB, 'memory' )
  }
  withName: 'post_asm_process:ANNOT:rgi_summary' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 1.GB, 'memory' )
  }
  withName: 'post_asm_process:ANNOT:tnblast' {
    cpus = check_max( 4, 'cpus' )
    memory = check_max( 2.GB, 'memory' )
  }
  withName: 'post_asm_process:ASSEMBLY_QC:aggregate_quast' {
    cpus = check_max( 1, 'cpus' )
  }
  withName: 'post_asm_process:ASSEMBLY_QC:checkm' {
    cpus = check_max( 8, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    time = check_max( 4.h * task.attempt, 'time' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
    maxRetries = 6
  }
  withName: 'post_asm_process:ASSEMBLY_QC:checkm_single' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    time = check_max( 2.h * task.attempt, 'time' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
    maxRetries = 6
  }
  withName: 'post_asm_process:ASSEMBLY_QC:quast' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
  }
  withName: 'post_asm_process:ASSEMBLY_QC:quast_single' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
  }
  withName: 'post_asm_process:ASSEMBLY_QC:quast_summary' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
  }
  withName: 'post_asm_process:ASSEMBLY_QC:quast_summary_single' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
  }
  withName: 'post_asm_process:ASSEMBLY_QC:quast_summary_aggregate' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
  }
  withName: 'post_asm_process:ASSEMBLY_QC:quast_summary_aggregate_single' {
    cpus = check_max( 2, 'cpus' )
    memory = check_max( 8.GB * task.attempt, 'memory' )
    errorStrategy = { (task.exitStatus in 137..140) ? 'retry' : 'terminate' }
  }
}